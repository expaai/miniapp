version: '3.8'

services:
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend.prod
      args:
        - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
    restart: always
    environment:
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
    networks:
      - career-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    restart: unless-stopped
    environment:
      - ENVIRONMENT=production
      - POSTGRES_USER=career_user
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=career_db
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - DATABASE_URL=postgresql://career_user:${POSTGRES_PASSWORD}@postgres:5432/career_db
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ALLOWED_ORIGINS=https://expa-ai.ru,https://www.expa-ai.ru
    depends_on:
      - postgres
    networks:
      - career-network

  postgres:
    image: postgres:15
    restart: unless-stopped
    environment:
      - POSTGRES_DB=career_db
      - POSTGRES_USER=career_user
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backup:/backup
    networks:
      - career-network

  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - frontend
      - backend
    networks:
      - career-network

volumes:
  postgres_data:

networks:
  career-network:
    driver: bridge