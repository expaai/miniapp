"""add_career_goal_to_sessions

Revision ID: d1f0c263e386
Revises: 001
Create Date: 2025-07-02 15:10:56.812083

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'd1f0c263e386'
down_revision = '001'
branch_labels = None
depends_on = None

def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('analyses', sa.Column('ai_analysis', sa.Text(), nullable=True))
    op.add_column('analyses', sa.Column('analysis_type', sa.String(), nullable=True))
    op.add_column('analyses', sa.Column('processing_time', sa.Integer(), nullable=True))
    op.alter_column('analyses', 'resume_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('analyses', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.create_index(op.f('ix_analyses_id'), 'analyses', ['id'], unique=False)
    op.drop_column('analyses', 'analysis_result')
    op.drop_column('analyses', 'processing_time_seconds')
    op.drop_column('analyses', 'updated_at')
    op.add_column('resumes', sa.Column('user_id', sa.Integer(), nullable=True))
    op.add_column('resumes', sa.Column('encrypted_file', sa.LargeBinary(), nullable=True))
    op.alter_column('resumes', 'session_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('resumes', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.create_index(op.f('ix_resumes_id'), 'resumes', ['id'], unique=False)
    op.create_foreign_key(None, 'resumes', 'users', ['user_id'], ['id'])
    op.drop_column('resumes', 'encrypted_file_path')
    op.drop_column('resumes', 'updated_at')
    op.alter_column('sessions', 'session_id',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
    op.alter_column('sessions', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('sessions', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.alter_column('sessions', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.alter_column('sessions', 'career_goal',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.create_index(op.f('ix_sessions_id'), 'sessions', ['id'], unique=False)
    op.add_column('users', sa.Column('first_name', sa.String(), nullable=True))
    op.add_column('users', sa.Column('last_name', sa.String(), nullable=True))
    op.add_column('users', sa.Column('consent_date', sa.DateTime(timezone=True), nullable=True))
    op.alter_column('users', 'telegram_id',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.alter_column('users', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.alter_column('users', 'data_processing_consent',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    # ### end Alembic commands ###

def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.alter_column('users', 'data_processing_consent',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('users', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('users', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('users', 'telegram_id',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)
    op.drop_column('users', 'consent_date')
    op.drop_column('users', 'last_name')
    op.drop_column('users', 'first_name')
    op.drop_index(op.f('ix_sessions_id'), table_name='sessions')
    op.alter_column('sessions', 'career_goal',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('sessions', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('sessions', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('sessions', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('sessions', 'session_id',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
    op.add_column('resumes', sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('resumes', sa.Column('encrypted_file_path', sa.VARCHAR(length=500), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'resumes', type_='foreignkey')
    op.drop_index(op.f('ix_resumes_id'), table_name='resumes')
    op.alter_column('resumes', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('resumes', 'session_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_column('resumes', 'encrypted_file')
    op.drop_column('resumes', 'user_id')
    op.add_column('analyses', sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('analyses', sa.Column('processing_time_seconds', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('analyses', sa.Column('analysis_result', sa.TEXT(), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_analyses_id'), table_name='analyses')
    op.alter_column('analyses', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('analyses', 'resume_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_column('analyses', 'processing_time')
    op.drop_column('analyses', 'analysis_type')
    op.drop_column('analyses', 'ai_analysis')
    # ### end Alembic commands ###