name: Deploy to VPS

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'README.md'
      - 'docs/**'
      - '*.md'

  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Deploy to VPS
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –¥–µ–ø–ª–æ–π..."
          
          # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
          cd /opt/career-miniapp || {
            echo "–°–æ–∑–¥–∞—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞"
            sudo mkdir -p /opt/career-miniapp
            cd /opt/career-miniapp
          }
          
          # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
          echo "–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é —Ç–µ–∫—É—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
          sudo docker-compose -f docker-compose.prod.yml down || true
          
          # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–¥
          echo "–û–±–Ω–æ–≤–ª—è—é –∫–æ–¥..."
          if [ -d ".git" ]; then
            sudo git fetch origin
            sudo git reset --hard origin/main
          else
            cd ..
            sudo rm -rf career-miniapp
            sudo git clone https://github.com/${{ github.repository }}.git career-miniapp
            cd career-miniapp
          fi
          
          # –°–æ–∑–¥–∞–µ–º .env.prod —Ñ–∞–π–ª —Å —Å–µ–∫—Ä–µ—Ç–∞–º–∏
          echo "–°–æ–∑–¥–∞—é .env.prod —Ñ–∞–π–ª —Å —Å–µ–∫—Ä–µ—Ç–∞–º–∏..."
          sudo tee .env.prod > /dev/null <<EOF
          POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
          OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
          DOMAIN=expa-ai.ru
          API_DOMAIN=api.expa-ai.ru
          VITE_API_URL=https://api.expa-ai.ru
          NEXT_PUBLIC_API_URL=https://api.expa-ai.ru
          EOF
          
          # –°–æ–±–∏—Ä–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
          echo "–°–æ–±–∏—Ä–∞—é –∏ –∑–∞–ø—É—Å–∫–∞—é –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
          # –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env.prod
          export $(grep -v '^#' .env.prod | xargs)
          sudo docker-compose -f docker-compose.prod.yml build --no-cache
          sudo docker-compose -f docker-compose.prod.yml up -d
          
          # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
          echo "–ñ–¥—É –∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."
          sleep 30
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
          echo "–ü—Ä–æ–≤–µ—Ä—è—é —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤..."
          sudo docker-compose -f docker-compose.prod.yml ps
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º health endpoint
          echo "–ü—Ä–æ–≤–µ—Ä—è—é API health..."
          for i in {1..5}; do
            if curl -f http://localhost:8000/health > /dev/null 2>&1; then
              echo "‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç"
              break
            else
              if [ $i -eq 5 ]; then
                echo "‚ùå API –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç –ø–æ—Å–ª–µ 5 –ø–æ–ø—ã—Ç–æ–∫"
                sudo docker-compose -f docker-compose.prod.yml logs backend
                exit 1
              else
                echo "–ü–æ–ø—ã—Ç–∫–∞ $i: API –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç, –∂–¥—É..."
                sleep 10
              fi
            fi
          done
          
          # –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–∑—ã
          echo "–û—á–∏—â–∞—é —Å—Ç–∞—Ä—ã–µ Docker –æ–±—Ä–∞–∑—ã..."
          sudo docker system prune -f
          
          echo "üéâ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
          echo "Frontend: https://expa-ai.ru"
          echo "Backend API: https://api.expa-ai.ru"