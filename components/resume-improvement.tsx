"use client"

import type React from "react"

import { useState, useEffect, useRef } from "react"
import { useAPI, JobMatchingRequest } from "@/hooks/use-api"

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è API
const API_BASE_URL = process.env.NEXT_PUBLIC_API_URL || 'https://api.expa-ai.ru'
import { Button } from "@/components/ui/button"
import { Card, CardContent } from "@/components/ui/card"
import { Badge } from "@/components/ui/badge"
import { Input } from "@/components/ui/input"
import {
  ArrowLeft,
  Upload,
  FileText,
  CheckCircle,
  Lightbulb,
  TrendingUp,
  ExternalLink,
  MapPin,
  DollarSign,
  Sparkles,
  Target,
  Users,
  Award,
  ChevronDown,
  Briefcase,
} from "lucide-react"

interface ResumeImprovementProps {
  onBack: () => void
  selectedRole?: 'student' | 'professional' | null
  selectedGoal?: string
  selectedProfession?: string
  sessionId?: string
}

type Step = "instruction" | "upload" | "processing" | "results"

// –û—Å–Ω–æ–≤–Ω–æ–π —Å–ø–∏—Å–æ–∫ –ø—Ä–æ—Ñ–µ—Å—Å–∏–π –¥–ª—è –∫–Ω–æ–ø–æ–∫ (10 —à—Ç—É–∫)
const professions = [
  "AI/ML –∏–Ω–∂–µ–Ω–µ—Ä",
  "DevOps –∏–Ω–∂–µ–Ω–µ—Ä",
  "Product Manager",
  "–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –∫–∏–±–µ—Ä–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏",
  "Backend-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫",
  "Frontend-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫",
  "Product Marketing",
  "Data Science",
  "–°–∏—Å—Ç–µ–º–Ω—ã–π –∞–Ω–∞–ª–∏—Ç–∏–∫",
  "QA –∏–Ω–∂–µ–Ω–µ—Ä",
]

// –ü–æ–ª–Ω—ã–π —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫ –ø—Ä–æ—Ñ–µ—Å—Å–∏–π –¥–ª—è –∞–≤—Ç–æ–∫–æ–º–ø–ª–∏—Ç–∞
const allProfessions = [
  // –û—Å–Ω–æ–≤–Ω—ã–µ IT –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏
  "AI/ML –∏–Ω–∂–µ–Ω–µ—Ä",
  "DevOps –∏–Ω–∂–µ–Ω–µ—Ä",
  "Product Manager",
  "–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –∫–∏–±–µ—Ä–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏",
  "Backend-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫",
  "Frontend-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫",
  "Product Marketing",
  "Data Science",
  "–°–∏—Å—Ç–µ–º–Ω—ã–π –∞–Ω–∞–ª–∏—Ç–∏–∫",
  "QA –∏–Ω–∂–µ–Ω–µ—Ä",
  "Fullstack-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫",
  "Mobile-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫",
  "iOS-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫",
  "Android-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫",
  "React Native —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫",
  "Flutter —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫",
  "Game Developer",
  "Unity —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫",
  "Unreal Engine —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫",
  "Blockchain —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫",
  "Smart Contract —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫",
  "Web3 —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫",
  "–°–∏—Å—Ç–µ–º–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä",
  "–°–µ—Ç–µ–≤–æ–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä",
  "Database Administrator (DBA)",
  "Cloud Engineer",
  "AWS Engineer",
  "Azure Engineer",
  "Google Cloud Engineer",
  "Site Reliability Engineer (SRE)",
  "Platform Engineer",
  "Infrastructure Engineer",
  "Security Engineer",
  "Penetration Tester",
  "Information Security Analyst",
  "CISO (Chief Information Security Officer)",
  "Data Engineer",
  "Data Analyst",
  "Business Intelligence Analyst",
  "Machine Learning Engineer",
  "Deep Learning Engineer",
  "Computer Vision Engineer",
  "NLP Engineer",
  "Research Scientist",
  "UX/UI Designer",
  "UX Designer",
  "UI Designer",
  "Product Designer",
  "Interaction Designer",
  "Service Designer",
  "Design System Designer",
  "Technical Writer",
  "Documentation Specialist",
  "Business Analyst",
  "Technical Analyst",
  "Requirements Analyst",
  "Scrum Master",
  "Agile Coach",
  "Project Manager",
  "Technical Project Manager",
  "Program Manager",
  "Release Manager",
  "Product Owner",
  "Product Marketing Manager",
  "Growth Product Manager",
  "Technical Product Manager",
  "API Product Manager",
  "Platform Product Manager",
  "Sales Engineer",
  "Solutions Engineer",
  "Customer Success Engineer",
  "Technical Support Engineer",
  "Implementation Engineer",
  "Integration Engineer",
  "Test Engineer",
  "Automation QA Engineer",
  "Manual QA Engineer",
  "Performance Test Engineer",
  "Security Test Engineer",
  "QA Lead",
  "Test Manager",
  "Software Architect",
  "Solution Architect",
  "Enterprise Architect",
  "Cloud Architect",
  "Security Architect",
  "Data Architect",
  "API Architect",
  "Microservices Architect",
  // C-level –∏ —Ä—É–∫–æ–≤–æ–¥—è—â–∏–µ –ø–æ–∑–∏—Ü–∏–∏
  "CTO (Chief Technology Officer)",
  "CPO (Chief Product Officer)",
  "CDO (Chief Data Officer)",
  "CIO (Chief Information Officer)",
  "CISO (Chief Information Security Officer)",
  "Chief Digital Officer",
  "Chief Innovation Officer",
  "Chief AI Officer",
  "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –¥–∏—Ä–µ–∫—Ç–æ—Ä",
  "–î–∏—Ä–µ–∫—Ç–æ—Ä –ø–æ –ø—Ä–æ–¥—É–∫—Ç—É",
  "–î–∏—Ä–µ–∫—Ç–æ—Ä –ø–æ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ",
  "–î–∏—Ä–µ–∫—Ç–æ—Ä –ø–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–º —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–º",
  "–î–∏—Ä–µ–∫—Ç–æ—Ä –ø–æ —Ü–∏—Ñ—Ä–æ–≤–æ–π —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏",
  "–î–∏—Ä–µ–∫—Ç–æ—Ä –ø–æ –∏–Ω–Ω–æ–≤–∞—Ü–∏—è–º",
  "–î–∏—Ä–µ–∫—Ç–æ—Ä –ø–æ –¥–∞–Ω–Ω—ã–º",
  "–î–∏—Ä–µ–∫—Ç–æ—Ä –ø–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏",
  "–†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å –æ—Ç–¥–µ–ª–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏",
  "–†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å IT-–æ—Ç–¥–µ–ª–∞",
  "–†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å –æ—Ç–¥–µ–ª–∞ –ø—Ä–æ–¥—É–∫—Ç–∞",
  "–†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å –æ—Ç–¥–µ–ª–∞ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏",
  "–†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å –æ—Ç–¥–µ–ª–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è",
  "–†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å –æ—Ç–¥–µ–ª–∞ DevOps",
  "–†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å –æ—Ç–¥–µ–ª–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏",
  "Head of Engineering",
  "Head of Product",
  "Head of Data",
  "Head of Security",
  "Head of DevOps",
  "Head of QA",
  "Head of Design",
  "Head of Analytics",
  "VP of Engineering",
  "VP of Product",
  "VP of Technology",
  "VP of Data",
  "Engineering Manager",
  "Product Manager",
  "Data Science Manager",
  "Security Manager",
  "QA Manager",
  "DevOps Manager",
  "Platform Manager",
  "Technical Lead",
  "Team Lead",
  "Squad Lead",
  "Chapter Lead",
  "Tribe Lead",
  "Principal Engineer",
  "Staff Engineer",
  "Distinguished Engineer",
  "Fellow Engineer",
  "–ê—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä —Ä–µ—à–µ–Ω–∏–π",
  "–í–µ–¥—É—â–∏–π —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫",
  "–°—Ç–∞—Ä—à–∏–π —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫",
  "–ú–µ–Ω—Ç–æ—Ä —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤",
  // –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–æ–ª–∏
  "Consultant",
  "Technical Consultant",
  "IT Consultant",
  "Digital Consultant",
  "Transformation Consultant",
  "Freelancer",
  "Independent Contractor",
  "Entrepreneur",
  "Startup Founder",
  "Tech Entrepreneur",
]

const interestingFacts = [
  {
    title: "–ó–Ω–∞–ª–∏ –ª–∏ –≤—ã?",
    text: "–†–µ–∫—Ä—É—Ç–µ—Ä—ã —Ç—Ä–∞—Ç—è—Ç –≤ —Å—Ä–µ–¥–Ω–µ–º 6 —Å–µ–∫—É–Ω–¥ –Ω–∞ –ø–µ—Ä–≤–∏—á–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä —Ä–µ–∑—é–º–µ. –í–∞–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –µ–≥–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —á–∏—Ç–∞–µ–º—ã–º!",
    icon: "‚è±Ô∏è",
  },
  {
    title: "–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç",
    text: "–†–µ–∑—é–º–µ —Å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–µ–π –ø–æ–ª—É—á–∞—é—Ç –Ω–∞ 40% –±–æ–ª—å—à–µ –æ—Ç–∫–ª–∏–∫–æ–≤, –Ω–æ —Ç–æ–ª—å–∫–æ –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö —Å—Ñ–µ—Ä–∞—Ö –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏.",
    icon: "üì∏",
  },
  {
    title: "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
    text: "–ö–∞–Ω–¥–∏–¥–∞—Ç—ã —Å –æ–ø—ã—Ç–æ–º —Ä–∞–±–æ—Ç—ã –≤ —Å—Ç–∞—Ä—Ç–∞–ø–∞—Ö –ø–æ–ª—É—á–∞—é—Ç –Ω–∞ 25% –±–æ–ª—å—à–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –æ—Ç IT-–∫–æ–º–ø–∞–Ω–∏–π.",
    icon: "üöÄ",
  },
  {
    title: "–°–æ–≤–µ—Ç",
    text: "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ –∏–∑ –æ–ø–∏—Å–∞–Ω–∏—è –≤–∞–∫–∞–Ω—Å–∏–∏ —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç —à–∞–Ω—Å—ã –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è ATS –Ω–∞ 60%.",
    icon: "üéØ",
  },
  {
    title: "–§–∞–∫—Ç –æ –∫–∞—Ä—å–µ—Ä–µ",
    text: "IT-—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã –º–µ–Ω—è—é—Ç —Ä–∞–±–æ—Ç—É –≤ —Å—Ä–µ–¥–Ω–µ–º –∫–∞–∂–¥—ã–µ 2-3 –≥–æ–¥–∞, —á—Ç–æ —Å—á–∏—Ç–∞–µ—Ç—Å—è –Ω–æ—Ä–º–æ–π –≤ –∏–Ω–¥—É—Å—Ç—Ä–∏–∏.",
    icon: "üíº",
  },
  {
    title: "–ó–∞—Ä–ø–ª–∞—Ç–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
    text: "–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å –æ–ø—ã—Ç–æ–º —Ä–∞–±–æ—Ç—ã —Å –æ–±–ª–∞—á–Ω—ã–º–∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–º–∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç –Ω–∞ 30% –±–æ–ª—å—à–µ.",
    icon: "‚òÅÔ∏è",
  },
  {
    title: "–¢—Ä–µ–Ω–¥ —Ä—ã–Ω–∫–∞",
    text: "–°–ø—Ä–æ—Å –Ω–∞ DevOps-–∏–Ω–∂–µ–Ω–µ—Ä–æ–≤ –≤—ã—Ä–æ—Å –Ω–∞ 75% –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 2 –≥–æ–¥–∞.",
    icon: "üìà",
  },
  {
    title: "–ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ –∑–Ω–∞—Ç—å",
    text: "–†–µ–∑—é–º–µ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ –ø–æ–ª—É—á–∞—é—Ç –Ω–∞ 50% –±–æ–ª—å—à–µ –æ—Ç–∫–ª–∏–∫–æ–≤ –≤ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã—Ö –∫–æ–º–ø–∞–Ω–∏—è—Ö.",
    icon: "üåç",
  },
  {
    title: "–§–∞–∫—Ç –æ –Ω–∞–≤—ã–∫–∞—Ö",
    text: "Soft skills —É–ø–æ–º–∏–Ω–∞—é—Ç—Å—è –≤ 92% –≤–∞–∫–∞–Ω—Å–∏–π –¥–ª—è —Ä—É–∫–æ–≤–æ–¥—è—â–∏—Ö –ø–æ–∑–∏—Ü–∏–π –≤ IT.",
    icon: "ü§ù",
  },
  {
    title: "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–π",
    text: "–ö–∞–Ω–¥–∏–¥–∞—Ç—ã —Å GitHub-–ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ –ø—Ä–æ—Ö–æ–¥—è—Ç —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ –≤ 3 —Ä–∞–∑–∞ —á–∞—â–µ.",
    icon: "üíª",
  },
  {
    title: "–ö–∞—Ä—å–µ—Ä–Ω—ã–π —Å–æ–≤–µ—Ç",
    text: "–£—á–∞—Å—Ç–∏–µ –≤ open-source –ø—Ä–æ–µ–∫—Ç–∞—Ö –ø–æ–≤—ã—à–∞–µ—Ç —à–∞–Ω—Å—ã –Ω–∞ —Ç—Ä—É–¥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –Ω–∞ 40%.",
    icon: "üîì",
  },
  {
    title: "–¢—Ä–µ–Ω–¥ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è",
    text: "65% IT-—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ –ø—Ä–æ–¥–æ–ª–∂–∞—é—Ç –æ–±—É—á–µ–Ω–∏–µ –∏ –ø–æ–ª—É—á–∞—é—Ç —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –µ–∂–µ–≥–æ–¥–Ω–æ.",
    icon: "üéì",
  },
  {
    title: "–§–∞–∫—Ç –æ —É–¥–∞–ª–µ–Ω–∫–µ",
    text: "85% IT-–∫–æ–º–ø–∞–Ω–∏–π –ø—Ä–µ–¥–ª–∞–≥–∞—é—Ç –≥–∏–±—Ä–∏–¥–Ω—ã–π –∏–ª–∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é —É–¥–∞–ª–µ–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ä–∞–±–æ—Ç—ã.",
    icon: "üè†",
  },
  {
    title: "–ò–Ω—Ç–µ—Ä–µ—Å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
    text: "–ñ–µ–Ω—â–∏–Ω—ã –≤ IT –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç –≤ —Å—Ä–µ–¥–Ω–µ–º –Ω–∞ 15% –º–µ–Ω—å—à–µ –º—É–∂—á–∏–Ω, –Ω–æ —Ä–∞–∑—Ä—ã–≤ —Å–æ–∫—Ä–∞—â–∞–µ—Ç—Å—è.",
    icon: "üë©‚Äçüíª",
  },
  {
    title: "–§–∞–∫—Ç –æ —Å—Ç–∞—Ä—Ç–∞–ø–∞—Ö",
    text: "–†–∞–±–æ—Ç–∞ –≤ —Å—Ç–∞—Ä—Ç–∞–ø–µ –¥–∞–µ—Ç –æ–ø—ã—Ç, —ç–∫–≤–∏–≤–∞–ª–µ–Ω—Ç–Ω—ã–π 3-5 –≥–æ–¥–∞–º –≤ –∫—Ä—É–ø–Ω–æ–π –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏.",
    icon: "‚öôÔ∏è",
  },
  {
    title: "–¢—Ä–µ–Ω–¥ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π",
    text: "–ó–Ω–∞–Ω–∏–µ Kubernetes —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –∑–∞—Ä–ø–ª–∞—Ç—É DevOps-–∏–Ω–∂–µ–Ω–µ—Ä–∞ –Ω–∞ 25-40%.",
    icon: "üìä",
  },
  {
    title: "–ö–∞—Ä—å–µ—Ä–Ω—ã–π —Ñ–∞–∫—Ç",
    text: "Product Manager'—ã —Å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º –±—ç–∫–≥—Ä–∞—É–Ω–¥–æ–º –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç –Ω–∞ 20% –±–æ–ª—å—à–µ.",
    icon: "üíº",
  },
  {
    title: "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–∞–π–º–∞",
    text: "–ö–æ–º–ø–∞–Ω–∏–∏ —Ç—Ä–∞—Ç—è—Ç –≤ —Å—Ä–µ–¥–Ω–µ–º 23 –¥–Ω—è –Ω–∞ –ø–æ–∏—Å–∫ –∏ –Ω–∞–π–º –æ–¥–Ω–æ–≥–æ IT-—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞.",
    icon: "üìÖ",
  },
  {
    title: "–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ç—Ä–µ–Ω–¥",
    text: "–°–ø—Ä–æ—Å –Ω–∞ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ –ø–æ –∫–∏–±–µ—Ä–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ —Ä–∞—Å—Ç–µ—Ç –Ω–∞ 35% –µ–∂–µ–≥–æ–¥–Ω–æ.",
    icon: "üîí",
  },
  {
    title: "–§–∞–∫—Ç –æ –æ–±—É—á–µ–Ω–∏–∏",
    text: "Bootcamp-–≤—ã–ø—É—Å–∫–Ω–∏–∫–∏ –Ω–∞—Ö–æ–¥—è—Ç —Ä–∞–±–æ—Ç—É –≤ —Å—Ä–µ–¥–Ω–µ–º –∑–∞ 6 –º–µ—Å—è—Ü–µ–≤ –ø–æ—Å–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è.",
    icon: "‚ö°",
  },
  {
    title: "–ó–∞—Ä–ø–ª–∞—Ç–Ω—ã–π —Ñ–∞–∫—Ç",
    text: "–ê—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä—ã —Ä–µ—à–µ–Ω–∏–π –≤—Ö–æ–¥—è—Ç –≤ —Ç–æ–ø-3 —Å–∞–º—ã—Ö –≤—ã—Å–æ–∫–æ–æ–ø–ª–∞—á–∏–≤–∞–µ–º—ã—Ö IT-—Ä–æ–ª–µ–π.",
    icon: "üèóÔ∏è",
  },
  {
    title: "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–æ—Å—Ç–∞",
    text: "Data Science –æ—Å—Ç–∞–µ—Ç—Å—è –æ–¥–Ω–æ–π –∏–∑ —Å–∞–º—ã—Ö –±—ã—Å—Ç—Ä–æ—Ä–∞—Å—Ç—É—â–∏—Ö –ø—Ä–æ—Ñ–µ—Å—Å–∏–π (+22% –≤ –≥–æ–¥).",
    icon: "üìà",
  },
  {
    title: "–ö–∞—Ä—å–µ—Ä–Ω—ã–π —Å–æ–≤–µ—Ç",
    text: "–ú–µ–Ω—Ç–≤–æ—Ä—Å—Ç–≤–æ —É—Å–∫–æ—Ä—è–µ—Ç –∫–∞—Ä—å–µ—Ä–Ω—ã–π —Ä–æ—Å—Ç –Ω–∞ 50% –ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω—ã–º —Ä–∞–∑–≤–∏—Ç–∏–µ–º.",
    icon: "üë®‚Äçüè´",
  },
  {
    title: "–§–∞–∫—Ç –æ –Ω–∞–≤—ã–∫–∞—Ö",
    text: "–ó–Ω–∞–Ω–∏–µ Python –æ—Å—Ç–∞–µ—Ç—Å—è —Å–∞–º—ã–º –≤–æ—Å—Ç—Ä–µ–±–æ–≤–∞–Ω–Ω—ã–º –Ω–∞–≤—ã–∫–æ–º –≤ Data Science –∏ ML.",
    icon: "üêç",
  },
  {
    title: "–ò–Ω—Ç–µ—Ä–µ—Å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
    text: "Agile-—Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ —É–≤–µ–ª–∏—á–∏–≤–∞—é—Ç —à–∞–Ω—Å—ã –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ —Ä—É–∫–æ–≤–æ–¥—è—â–µ–π —Ä–æ–ª–∏ –Ω–∞ 60%.",
    icon: "üîÑ",
  },
  {
    title: "–¢—Ä–µ–Ω–¥ —Ä—ã–Ω–∫–∞",
    text: "–ö–æ–º–ø–∞–Ω–∏–∏ –≥–æ—Ç–æ–≤—ã –ø–ª–∞—Ç–∏—Ç—å –ø—Ä–µ–º–∏—é –¥–æ 40% –∑–∞ –æ–ø—ã—Ç —Ä–∞–±–æ—Ç—ã —Å –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–∞–º–∏.",
    icon: "üîß",
  },
  {
    title: "–§–∞–∫—Ç –æ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è—Ö",
    text: "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è –≤ —Å—Ä–µ–¥–Ω–µ–º –¥–ª—è—Ç—Å—è 45-90 –º–∏–Ω—É—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —É—Ä–æ–≤–Ω—è.",
    icon: "‚è∞",
  },
  {
    title: "–ö–∞—Ä—å–µ—Ä–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
    text: "QA-–∏–Ω–∂–µ–Ω–µ—Ä—ã —Å –æ–ø—ã—Ç–æ–º –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç –Ω–∞ 35% –±–æ–ª—å—à–µ –º–∞–Ω—É–∞–ª—å–Ω—ã—Ö —Ç–µ—Å—Ç–µ—Ä–æ–≤.",
    icon: "ü§ñ",
  },
  {
    title: "–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç",
    text: "–ö–æ–¥-—Ä–µ–≤—å—é —É–ª—É—á—à–∞–µ—Ç –∫–∞—á–µ—Å—Ç–≤–æ –∫–æ–¥–∞ –Ω–∞ 60% –∏ —è–≤–ª—è–µ—Ç—Å—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π –ø—Ä–∞–∫—Ç–∏–∫–æ–π –≤ 95% –∫–æ–º–∞–Ω–¥.",
    icon: "üëÄ",
  },
  {
    title: "–¢—Ä–µ–Ω–¥ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è",
    text: "–û–Ω–ª–∞–π–Ω-–∫—É—Ä—Å—ã –ø–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é –ø—Ä–æ—à–ª–∏ –±–æ–ª–µ–µ 50 –º–∏–ª–ª–∏–æ–Ω–æ–≤ —á–µ–ª–æ–≤–µ–∫ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –≥–æ–¥.",
    icon: "üíª",
  },
  {
    title: "–§–∞–∫—Ç –æ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏",
    text: "–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Ç—Ä–∞—Ç—è—Ç —Ç–æ–ª—å–∫–æ 30% –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ –Ω–∞–ø–∏—Å–∞–Ω–∏–µ –∫–æ–¥–∞, –æ—Å—Ç–∞–ª—å–Ω–æ–µ - –Ω–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –æ—Ç–ª–∞–¥–∫—É.",
    icon: "‚öñÔ∏è",
  },
  {
    title: "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤—ã–≥–æ—Ä–∞–Ω–∏—è",
    text: "42% IT-—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ –∏—Å–ø—ã—Ç—ã–≤–∞—é—Ç –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ –≤—ã–≥–æ—Ä–∞–Ω–∏–µ, –Ω–æ –∫–æ–º–ø–∞–Ω–∏–∏ –∞–∫—Ç–∏–≤–Ω–æ —Å —ç—Ç–∏–º –±–æ—Ä—é—Ç—Å—è.",
    icon: "üî•",
  },
  {
    title: "–ö–∞—Ä—å–µ—Ä–Ω—ã–π —Ñ–∞–∫—Ç",
    text: "–ü–µ—Ä–µ—Ö–æ–¥ –∏–∑ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –≤ –º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –∑–∞—Ä–ø–ª–∞—Ç—É –Ω–∞ 40-60% –≤ —Ç–µ—á–µ–Ω–∏–µ 2-3 –ª–µ—Ç.",
    icon: "üìà",
  },
  {
    title: "–ò–Ω—Ç–µ—Ä–µ—Å–Ω–∞—è —Ç–µ–Ω–¥–µ–Ω—Ü–∏—è",
    text: "No-code/Low-code –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã —Å–æ–∑–¥–∞—é—Ç –Ω–æ–≤—ã–µ —Ä–æ–ª–∏, –Ω–æ –Ω–µ –∑–∞–º–µ–Ω—è—é—Ç —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—É—é —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É.",
    icon: "üé®",
  },
  {
    title: "–§–∞–∫—Ç –æ –∫–æ–º–∞–Ω–¥–∞—Ö",
    text: "–°–∞–º—ã–µ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã —Å–æ—Å—Ç–æ—è—Ç –∏–∑ 5-9 —á–µ–ª–æ–≤–µ–∫ –∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç Scrum –∏–ª–∏ Kanban.",
    icon: "üë•",
  },
  {
    title: "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–Ω–Ω–æ–≤–∞—Ü–∏–π",
    text: "–ò–ò –∏ –º–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∏—Ä—É—é—Ç—Å—è –≤ 78% –Ω–æ–≤—ã—Ö IT-–ø—Ä–æ–¥—É–∫—Ç–æ–≤.",
    icon: "üß†",
  },
  {
    title: "–ö–∞—Ä—å–µ—Ä–Ω—ã–π —Å–æ–≤–µ—Ç",
    text: "–ù–µ—Ç–≤–æ—Ä–∫–∏–Ω–≥ —á–µ—Ä–µ–∑ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏ –ø—Ä–∏–≤–æ–¥–∏—Ç –∫ –Ω–æ–≤–æ–π —Ä–∞–±–æ—Ç–µ –≤ 35% —Å–ª—É—á–∞–µ–≤.",
    icon: "ü§ù",
  },
  {
    title: "–§–∞–∫—Ç –æ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è—Ö",
    text: "React –æ—Å—Ç–∞–µ—Ç—Å—è —Å–∞–º—ã–º –ø–æ–ø—É–ª—è—Ä–Ω—ã–º —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥-—Ñ—Ä–µ–π–º–≤–æ—Ä–∫–æ–º —Å—Ä–µ–¥–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤.",
    icon: "‚öõÔ∏è",
  },
  {
    title: "–ò–Ω—Ç–µ—Ä–µ—Å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
    text: "–ö–æ–º–ø–∞–Ω–∏–∏ —Å —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏ –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç –Ω–∞ 35% –ª—É—á—à–∏–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã.",
    icon: "üåà",
  },
  {
    title: "–¢—Ä–µ–Ω–¥ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏",
    text: "DevSecOps —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–æ–º - –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏–Ω—Ç–µ–≥—Ä–∏—Ä—É–µ—Ç—Å—è –≤ –ø—Ä–æ—Ü–µ—Å—Å —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ —Å —Å–∞–º–æ–≥–æ –Ω–∞—á–∞–ª–∞.",
    icon: "üõ°Ô∏è",
  },
  {
    title: "–§–∞–∫—Ç –æ —Ä–æ—Å—Ç–µ",
    text: "Junior —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–æ—Å—Ç–∏–≥–∞—é—Ç Middle —É—Ä–æ–≤–Ω—è –≤ —Å—Ä–µ–¥–Ω–µ–º –∑–∞ 2-3 –≥–æ–¥–∞ –∞–∫—Ç–∏–≤–Ω–æ–π –ø—Ä–∞–∫—Ç–∏–∫–∏.",
    icon: "üìö",
  },
  {
    title: "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–π",
    text: "–ñ–∏–≤–æ–µ –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–∏ –ø—Ä–∞–∫—Ç–∏–∫—É—é—Ç 89% IT-–∫–æ–º–ø–∞–Ω–∏–π –¥–ª—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö —Ä–æ–ª–µ–π.",
    icon: "üíª",
  },
  {
    title: "–ö–∞—Ä—å–µ—Ä–Ω—ã–π —Ñ–∞–∫—Ç",
    text: "–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã —Å –æ–ø—ã—Ç–æ–º —Ä–∞–±–æ—Ç—ã –≤ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–∞—Ö –ø–æ–ª—É—á–∞—é—Ç –Ω–∞ 45% –±–æ–ª—å—à–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π.",
    icon: "üåç",
  },
  {
    title: "–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ç—Ä–µ–Ω–¥",
    text: "Blockchain-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏ –≤—Ö–æ–¥—è—Ç –≤ —Ç–æ–ø-5 —Å–∞–º—ã—Ö –≤—ã—Å–æ–∫–æ–æ–ø–ª–∞—á–∏–≤–∞–µ–º—ã—Ö IT-—Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–µ–π.",
    icon: "‚õìÔ∏è",
  },
  {
    title: "–§–∞–∫—Ç –æ –æ–±—É—á–µ–Ω–∏–∏",
    text: "–ü–∞—Ä–Ω–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å–∫–æ—Ä—è–µ—Ç –æ–±—É—á–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –Ω–∞ 40%.",
    icon: "üë´",
  },
  {
    title: "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —É–¥–µ—Ä–∂–∞–Ω–∏—è",
    text: "–ö–æ–º–ø–∞–Ω–∏–∏ —Å —Ö–æ—Ä–æ—à–µ–π –∏–Ω–∂–µ–Ω–µ—Ä–Ω–æ–π –∫—É–ª—å—Ç—É—Ä–æ–π —É–¥–µ—Ä–∂–∏–≤–∞—é—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –Ω–∞ 50% –¥–æ–ª—å—à–µ.",
    icon: "üè¢",
  },
  {
    title: "–ö–∞—Ä—å–µ—Ä–Ω—ã–π —Å–æ–≤–µ—Ç",
    text: "–†–µ–≥—É–ª—è—Ä–Ω—ã–µ 1-on-1 –≤—Å—Ç—Ä–µ—á–∏ —Å —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ–º —É—Å–∫–æ—Ä—è—é—Ç –∫–∞—Ä—å–µ—Ä–Ω—ã–π —Ä–æ—Å—Ç –Ω–∞ 25%.",
    icon: "üí¨",
  },
  {
    title: "–§–∞–∫—Ç –æ –±—É–¥—É—â–µ–º",
    text: "–ö 2030 –≥–æ–¥—É –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä—É–µ—Ç—Å—è –Ω–µ—Ö–≤–∞—Ç–∫–∞ 85 –º–∏–ª–ª–∏–æ–Ω–æ–≤ IT-—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ –ø–æ –≤—Å–µ–º—É –º–∏—Ä—É.",
    icon: "üîÆ",
  },
  {
    title: "–ò–Ω—Ç–µ—Ä–µ—Å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
    text: "–ö–æ–º–ø–∞–Ω–∏–∏ —Å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º –¥–æ–ª–≥–æ–º —Ç—Ä–∞—Ç—è—Ç –Ω–∞ 40% –±–æ–ª—å—à–µ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É –Ω–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π.",
    icon: "‚ö†Ô∏è",
  },
  {
    title: "–¢—Ä–µ–Ω–¥ —Ä–∞–±–æ—Ç—ã",
    text: "4-–¥–Ω–µ–≤–Ω–∞—è —Ä–∞–±–æ—á–∞—è –Ω–µ–¥–µ–ª—è —Ç–µ—Å—Ç–∏—Ä—É–µ—Ç—Å—è –≤ 15% IT-–∫–æ–º–ø–∞–Ω–∏–π —Å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏.",
    icon: "üìÖ",
  },
]

const getJobsForProfession = (profession: string, userRole?: 'student' | 'professional' | null, userGoal?: string) => {
  // –ë–∞–∑–æ–≤–∞—è –∫–∞—Ä—Ç–∞ –≤–∞–∫–∞–Ω—Å–∏–π
  const jobsMap: { [key: string]: any[] } = {
    'AI/ML –∏–Ω–∂–µ–Ω–µ—Ä': [
      {
        id: 1,
        title: "Senior ML Engineer",
        company: "–Ø–Ω–¥–µ–∫—Å",
        location: "–ú–æ—Å–∫–≤–∞",
        salary: "300 000 - 450 000 ‚ÇΩ",
        type: "–ü–æ–ª–Ω–∞—è –∑–∞–Ω—è—Ç–æ—Å—Ç—å",
        description: "–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∏ –≤–Ω–µ–¥—Ä–µ–Ω–∏–µ ML-–º–æ–¥–µ–ª–µ–π –¥–ª—è –ø–æ–∏—Å–∫–æ–≤—ã—Ö –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤"
      },
      {
        id: 2,
        title: "AI Research Scientist",
        company: "–°–±–µ—Ä",
        location: "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥",
        salary: "250 000 - 400 000 ‚ÇΩ",
        type: "–ü–æ–ª–Ω–∞—è –∑–∞–Ω—è—Ç–æ—Å—Ç—å",
        description: "–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –≤ –æ–±–ª–∞—Å—Ç–∏ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞ –∏ NLP"
      },
      {
        id: 3,
        title: "Machine Learning Engineer",
        company: "VK",
        location: "–ú–æ—Å–∫–≤–∞",
        salary: "280 000 - 380 000 ‚ÇΩ",
        type: "–ü–æ–ª–Ω–∞—è –∑–∞–Ω—è—Ç–æ—Å—Ç—å",
        description: "–°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ç–µ–ª—å–Ω—ã—Ö —Å–∏—Å—Ç–µ–º –∏ –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏"
      }
    ],
    'DevOps': [
      {
        id: 1,
        title: "Senior DevOps Engineer",
        company: "–¢–∏–Ω—å–∫–æ—Ñ—Ñ",
        location: "–ú–æ—Å–∫–≤–∞",
        salary: "250 000 - 350 000 ‚ÇΩ",
        type: "–ü–æ–ª–Ω–∞—è –∑–∞–Ω—è—Ç–æ—Å—Ç—å",
        description: "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è CI/CD –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–±–ª–∞—á–Ω–æ–π –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π"
      },
      {
        id: 2,
        title: "Platform Engineer",
        company: "Ozon",
        location: "–ú–æ—Å–∫–≤–∞",
        salary: "220 000 - 320 000 ‚ÇΩ",
        type: "–ü–æ–ª–Ω–∞—è –∑–∞–Ω—è—Ç–æ—Å—Ç—å",
        description: "–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π –Ω–∞ Kubernetes"
      },
      {
        id: 3,
        title: "Site Reliability Engineer",
        company: "–ê–≤–∏—Ç–æ",
        location: "–ú–æ—Å–∫–≤–∞",
        salary: "200 000 - 300 000 ‚ÇΩ",
        type: "–ü–æ–ª–Ω–∞—è –∑–∞–Ω—è—Ç–æ—Å—Ç—å",
        description: "–û–±–µ—Å–ø–µ—á–µ–Ω–∏–µ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏ –∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –≤—ã—Å–æ–∫–æ–Ω–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Å–∏—Å—Ç–µ–º"
      }
    ],
    'Product manager': [
      {
        id: 1,
        title: "Senior Product Manager",
        company: "Wildberries",
        location: "–ú–æ—Å–∫–≤–∞",
        salary: "200 000 - 300 000 ‚ÇΩ",
        type: "–ü–æ–ª–Ω–∞—è –∑–∞–Ω—è—Ç–æ—Å—Ç—å",
        description: "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–æ–≤–æ–π –ª–∏–Ω–µ–π–∫–æ–π –º–æ–±–∏–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
      },
      {
        id: 2,
        title: "Product Owner",
        company: "Kaspersky",
        location: "–ú–æ—Å–∫–≤–∞",
        salary: "180 000 - 280 000 ‚ÇΩ",
        type: "–ü–æ–ª–Ω–∞—è –∑–∞–Ω—è—Ç–æ—Å—Ç—å",
        description: "–†–∞–∑–≤–∏—Ç–∏–µ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –∫–∏–±–µ—Ä–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –¥–ª—è –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–≥–æ —Å–µ–≥–º–µ–Ω—Ç–∞"
      },
      {
        id: 3,
        title: "Lead Product Manager",
        company: "–ú–µ–≥–∞—Ñ–æ–Ω",
        location: "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥",
        salary: "220 000 - 320 000 ‚ÇΩ",
        type: "–ü–æ–ª–Ω–∞—è –∑–∞–Ω—è—Ç–æ—Å—Ç—å",
        description: "–°—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–æ–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –∑–∞–ø—É—Å–∫ –Ω–æ–≤—ã—Ö —Ü–∏—Ñ—Ä–æ–≤—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤"
      }
    ],
    'Backend-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫': [
      {
        id: 1,
        title: "Senior Backend Developer",
        company: "–Ø–Ω–¥–µ–∫—Å",
        location: "–ú–æ—Å–∫–≤–∞",
        salary: "250 000 - 400 000 ‚ÇΩ",
        type: "–ü–æ–ª–Ω–∞—è –∑–∞–Ω—è—Ç–æ—Å—Ç—å",
        description: "–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –≤—ã—Å–æ–∫–æ–Ω–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ –Ω–∞ Go –∏ Python"
      },
      {
        id: 2,
        title: "Java Developer",
        company: "–°–±–µ—Ä",
        location: "–ú–æ—Å–∫–≤–∞",
        salary: "200 000 - 320 000 ‚ÇΩ",
        type: "–ü–æ–ª–Ω–∞—è –∑–∞–Ω—è—Ç–æ—Å—Ç—å",
        description: "–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –±–∞–Ω–∫–æ–≤—Å–∫–∏—Ö —Å–∏—Å—Ç–µ–º –∏ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã"
      },
      {
        id: 3,
        title: "Python Backend Engineer",
        company: "VK",
        location: "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥",
        salary: "180 000 - 280 000 ‚ÇΩ",
        type: "–ü–æ–ª–Ω–∞—è –∑–∞–Ω—è—Ç–æ—Å—Ç—å",
        description: "–°–æ–∑–¥–∞–Ω–∏–µ API –¥–ª—è —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–π –∏ –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä–æ–≤"
      }
    ],
    'Frontend-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫': [
      {
        id: 1,
        title: "Senior Frontend Developer",
        company: "–¢–∏–Ω—å–∫–æ—Ñ—Ñ",
        location: "–ú–æ—Å–∫–≤–∞",
        salary: "200 000 - 300 000 ‚ÇΩ",
        type: "–ü–æ–ª–Ω–∞—è –∑–∞–Ω—è—Ç–æ—Å—Ç—å",
        description: "–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –Ω–∞ React –∏ TypeScript"
      },
      {
        id: 2,
        title: "React Developer",
        company: "Ozon",
        location: "–ú–æ—Å–∫–≤–∞",
        salary: "180 000 - 280 000 ‚ÇΩ",
        type: "–ü–æ–ª–Ω–∞—è –∑–∞–Ω—è—Ç–æ—Å—Ç—å",
        description: "–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤ –¥–ª—è e-commerce –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã"
      },
      {
        id: 3,
        title: "Frontend Team Lead",
        company: "–ê–≤–∏—Ç–æ",
        location: "–ú–æ—Å–∫–≤–∞",
        salary: "250 000 - 350 000 ‚ÇΩ",
        type: "–ü–æ–ª–Ω–∞—è –∑–∞–Ω—è—Ç–æ—Å—Ç—å",
        description: "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –ª–∏–¥–µ—Ä—Å—Ç–≤–æ –∫–æ–º–∞–Ω–¥—ã –∏ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è"
      }
    ]
  }
  
  // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≤–∞–∫–∞–Ω—Å–∏–∏ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏ –∏–ª–∏ –æ–±—â–∏–µ IT –≤–∞–∫–∞–Ω—Å–∏–∏
  return jobsMap[profession] || [
    {
      id: 1,
      title: "IT –°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç",
      company: "TechCorp",
      location: "–ú–æ—Å–∫–≤–∞",
      salary: "150 000 - 250 000 ‚ÇΩ",
      type: "–ü–æ–ª–Ω–∞—è –∑–∞–Ω—è—Ç–æ—Å—Ç—å",
      description: "–†–∞–±–æ—Ç–∞ –≤ —Å—Ñ–µ—Ä–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π"
    },
    {
      id: 2,
      title: "Software Engineer",
      company: "StartupXYZ",
      location: "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥",
      salary: "120 000 - 200 000 ‚ÇΩ",
      type: "–ü–æ–ª–Ω–∞—è –∑–∞–Ω—è—Ç–æ—Å—Ç—å",
      description: "–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–≥–æ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è"
    },
    {
      id: 3,
      title: "Technical Specialist",
      company: "InnovateTech",
      location: "–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫",
      salary: "100 000 - 180 000 ‚ÇΩ",
      type: "–ü–æ–ª–Ω–∞—è –∑–∞–Ω—è—Ç–æ—Å—Ç—å",
      description: "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ —Ä–∞–∑–≤–∏—Ç–∏–µ IT-—Ä–µ—à–µ–Ω–∏–π"
    }
  ]

  // –ü–æ–ª—É—á–∞–µ–º –±–∞–∑–æ–≤—ã–µ –≤–∞–∫–∞–Ω—Å–∏–∏ –¥–ª—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏
  const baseJobs = jobsMap[profession] || jobsMap['–î—Ä—É–≥–æ–µ'] || []
  
  // –§–∏–ª—å—Ç—Ä—É–µ–º –∏ –∞–¥–∞–ø—Ç–∏—Ä—É–µ–º –≤–∞–∫–∞–Ω—Å–∏–∏ –ø–æ–¥ —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  let filteredJobs = baseJobs.map(job => ({ ...job }))
  
  if (userRole === 'student') {
    // –î–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º junior/intern –ø–æ–∑–∏—Ü–∏–∏
    filteredJobs = filteredJobs.map(job => ({
      ...job,
      title: job.title.includes('Senior') ? job.title.replace('Senior', 'Junior') : 
             job.title.includes('Lead') ? job.title.replace('Lead', 'Junior') :
             job.title,
      salary: job.salary.replace(/\d+/g, (match: string) => {
        const num = parseInt(match)
        return Math.floor(num * 0.6).toString() // –°–Ω–∏–∂–∞–µ–º –∑–∞—Ä–ø–ª–∞—Ç—É –Ω–∞ 40% –¥–ª—è junior –ø–æ–∑–∏—Ü–∏–π
      }),
      description: job.description + ' (–ü–æ–∑–∏—Ü–∏—è –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤)'
    }))
  } else if (userRole === 'professional') {
    // –î–ª—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–æ–≤ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º senior/lead –ø–æ–∑–∏—Ü–∏–∏
    filteredJobs = filteredJobs.map(job => ({
      ...job,
      title: job.title.includes('Junior') ? job.title.replace('Junior', 'Senior') : 
             !job.title.includes('Senior') && !job.title.includes('Lead') ? 'Senior ' + job.title :
             job.title,
      salary: job.salary.replace(/\d+/g, (match: string) => {
        const num = parseInt(match)
        return Math.floor(num * 1.3).toString() // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∑–∞—Ä–ø–ª–∞—Ç—É –Ω–∞ 30% –¥–ª—è senior –ø–æ–∑–∏—Ü–∏–π
      }),
      description: job.description + ' (–ü–æ–∑–∏—Ü–∏—è –¥–ª—è –æ–ø—ã—Ç–Ω—ã—Ö —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤)'
    }))
  }
  
  return filteredJobs
}

export default function ResumeImprovement({ onBack, selectedRole, selectedGoal, selectedProfession, sessionId }: ResumeImprovementProps) {
  console.log('üöÄ –ö–û–ú–ü–û–ù–ï–ù–¢ RESUMEIMPROVEMENT –ó–ê–ì–†–£–ñ–ï–ù!')
  console.log('üéØ –ü–æ–ª—É—á–µ–Ω—ã props:', { selectedRole, selectedGoal, selectedProfession, sessionId })
  const [currentStep, setCurrentStep] = useState<Step>("instruction")

  const [uploadedFile, setUploadedFile] = useState<File | null>(null)
  const [currentFactIndex, setCurrentFactIndex] = useState(0)
  const [jobUrl, setJobUrl] = useState("")
  const [isAnalyzing, setIsAnalyzing] = useState(false)
  const [analysisResult, setAnalysisResult] = useState<string | null>(null)
  const [apiJobs, setApiJobs] = useState<any[]>([])
  
  // –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏
  const [localSelectedProfession, setLocalSelectedProfession] = useState(selectedProfession || "")
  const [customProfession, setCustomProfession] = useState("")
  const [showCustomInput, setShowCustomInput] = useState(false)
  const [filteredProfessions, setFilteredProfessions] = useState<string[]>([])
  
  const { getJobMatches, logProfessionSelection, loading: apiLoading } = useAPI()
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏
  const handleProfessionSelect = async (profession: string) => {
    setLocalSelectedProfession(profession)
    setShowCustomInput(false)
    setCustomProfession("")
    
    // –õ–æ–≥–∏—Ä—É–µ–º –≤—ã–±–æ—Ä –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏
    if (sessionId) {
      try {
        await logProfessionSelection({
          user_id: `user_${Date.now()}`,
          session_id: sessionId,
          profession: profession,
          user_role: selectedRole || 'professional',
          user_goal: selectedGoal || '',
          timestamp: new Date().toISOString()
        })
      } catch (error) {
        console.error('Failed to log profession selection:', error)
      }
    }
  }
  
  const handleCustomProfessionChange = (value: string) => {
    setCustomProfession(value)
    if (value.length > 0) {
      const filtered = allProfessions.filter(prof => 
        prof.toLowerCase().includes(value.toLowerCase())
      ).slice(0, 5)
      setFilteredProfessions(filtered)
    } else {
      setFilteredProfessions([])
    }
  }
  
  const handleCustomProfessionSubmit = async () => {
    if (customProfession.trim()) {
      await handleProfessionSelect(customProfession.trim())
    }
  }
  
  // Fetch jobs from API when component mounts
  useEffect(() => {
    const fetchJobs = async () => {
      const profession = localSelectedProfession || customProfession
      if (profession && sessionId) {
        try {
          const jobRequest: JobMatchingRequest = {
            user_id: `user_${Date.now()}`,
            session_id: sessionId,
            profession: profession,
            user_role: selectedRole || 'professional',
            user_goal: selectedGoal || '',
            timestamp: new Date().toISOString()
          }
          const response = await getJobMatches(jobRequest)
          setApiJobs(response.jobs || [])
        } catch (error) {
          console.error('Failed to fetch jobs:', error)
          // Fallback to hardcoded jobs if API fails
          setApiJobs(getJobsForProfession(profession, selectedRole, selectedGoal))
        }
      }
    }
    fetchJobs()
  }, [localSelectedProfession, customProfession, sessionId, selectedRole, selectedGoal, getJobMatches])
  
  console.log('üìç Current step:', currentStep)
  console.log('üìä –í—Å–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è:', { currentStep, selectedProfession, uploadedFile, selectedRole, selectedGoal })

  useEffect(() => {
    const interval = setInterval(() => {
      setCurrentFactIndex((prev) => (prev + 1) % interestingFacts.length)
    }, 5000) // –£–≤–µ–ª–∏—á–µ–Ω–æ –¥–æ 5 —Å–µ–∫—É–Ω–¥
    return () => clearInterval(interval)
  }, [])



  const handleFileUpload = (event: React.ChangeEvent<HTMLInputElement>) => {
    const file = event.target.files?.[0]
    if (file) {
      setUploadedFile(file)
    }
  }

  const handleDragOver = (event: React.DragEvent<HTMLDivElement>) => {
    event.preventDefault()
  }

  const handleDrop = (event: React.DragEvent<HTMLDivElement>) => {
    event.preventDefault()
    const files = event.dataTransfer.files
    if (files.length > 0) {
      const file = files[0]
      if (file.type === 'application/pdf' || 
            file.type === 'application/msword' || 
            file.type === 'application/vnd.openxmlformats-officedocument.wordprocessingml.document' ||
            file.type === 'text/plain') {
        setUploadedFile(file)
      }
    }
  }

  const triggerFileInput = () => {
    const fileInput = document.getElementById('file-input') as HTMLInputElement
    if (fileInput) {
      fileInput.click()
    }
  }

  const extractTextFromFile = async (file: File): Promise<string> => {
    console.log('üî• –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª –Ω–∞ —Å–µ—Ä–≤–µ—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏:', file.name, '—Ç–∏–ø:', file.type, '—Ä–∞–∑–º–µ—Ä:', file.size, '–±–∞–π—Ç')
    
    try {
      // –°–æ–∑–¥–∞–µ–º FormData –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∞–π–ª–∞
      const formData = new FormData()
      formData.append('file', file)
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª –Ω–∞ backend
      const response = await fetch(`${API_BASE_URL}/upload-resume`, {
        method: 'POST',
        body: formData
      })
      
      if (!response.ok) {
        const errorData = await response.json()
        throw new Error(errorData.detail || `–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: ${response.status}`)
      }
      
      const result = await response.json()
      
      if (!result.success) {
        throw new Error(result.message)
      }
      
      console.log('üî• –¢–µ–∫—Å—Ç —É—Å–ø–µ—à–Ω–æ –∏–∑–≤–ª–µ—á–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ:', result.message)
      return result.extracted_text
      
    } catch (error) {
      console.error('üî• –û–®–ò–ë–ö–ê –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ:', error)
      throw new Error(`–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ñ–∞–π–ª: ${error.message}`)
    }
  }

  const formatAIResponse = (response: string): string => {
    // –£–ª—É—á—à–∞–µ–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –ò–ò
    let formatted = response
      // –î–æ–±–∞–≤–ª—è–µ–º —ç–º–æ–¥–∑–∏ –∫ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º
      .replace(/–û–±—â–µ–µ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏–µ/g, 'üéØ –û–±—â–µ–µ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏–µ')
      .replace(/–°–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã/g, '‚úÖ –°–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã')
      .replace(/–û–±–ª–∞—Å—Ç–∏ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è/g, 'üîß –û–±–ª–∞—Å—Ç–∏ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è')
      .replace(/–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫–µ/g, '‚úèÔ∏è –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫–µ')
      .replace(/–ê–¥–∞–ø—Ç–∞—Ü–∏—è –ø–æ–¥ —Ä–æ—Å—Å–∏–π—Å–∫–∏–π —Ä—ã–Ω–æ–∫/g, 'üá∑üá∫ –ê–¥–∞–ø—Ç–∞—Ü–∏—è –ø–æ–¥ —Ä–æ—Å—Å–∏–π—Å–∫–∏–π —Ä—ã–Ω–æ–∫')
      .replace(/–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∞–¥–∞–ø—Ç–∞—Ü–∏–∏/g, 'üéØ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∞–¥–∞–ø—Ç–∞—Ü–∏–∏')
      .replace(/–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è/g, '‚ö° –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è')
      .replace(/–ó–∞–∫–ª—é—á–µ–Ω–∏–µ/g, 'üèÜ –ó–∞–∫–ª—é—á–µ–Ω–∏–µ')
      // –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –∫–∞–≤—ã—á–∫–∏ –∏ —Å–∫–æ–±–∫–∏
      .replace(/"/g, '')
      .replace(/\[|\]/g, '')
      // –£–ª—É—á—à–∞–µ–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø–∏—Å–∫–æ–≤
      .replace(/- /g, '‚Ä¢ ')
      .replace(/\d+\. /g, (match) => `${match.charAt(0)}. `)
    
    return formatted
  }

  const analyzeResumeWithAI = async (resumeText: string, profession: string, jobUrl?: string) => {
    console.log('üî• –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—é–º–µ –Ω–∞ –∞–Ω–∞–ª–∏–∑ —á–µ—Ä–µ–∑ backend API')
    console.log('üî• –î–ª–∏–Ω–∞ —Ç–µ–∫—Å—Ç–∞ —Ä–µ–∑—é–º–µ:', resumeText.length, '—Å–∏–º–≤–æ–ª–æ–≤')
    console.log('üî• –ü—Ä–æ—Ñ–µ—Å—Å–∏—è:', profession)
    console.log('üî• URL –≤–∞–∫–∞–Ω—Å–∏–∏:', jobUrl || '–Ω–µ —É–∫–∞–∑–∞–Ω')

    try {
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ backend –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
      const response = await fetch(`${API_BASE_URL}/analyze-resume-ai`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          resume_text: resumeText,
          profession: profession,
          job_url: jobUrl
        })
      })

      if (!response.ok) {
        const errorData = await response.json()
        throw new Error(errorData.detail || `–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: ${response.status}`)
      }

      const result = await response.json()
      
      if (!result.success) {
        throw new Error(result.message)
      }
      
      console.log('üî• –ê–Ω–∞–ª–∏–∑ —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω —Å —Å–µ—Ä–≤–µ—Ä–∞')
       return result.analysis
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ —Ä–µ–∑—é–º–µ:', error)
      if (error.name === 'AbortError') {
        return '–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.'
      }
      if (error.message.includes('API –∫–ª—é—á –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω')) {
        return '–°–µ—Ä–≤–∏—Å –∞–Ω–∞–ª–∏–∑–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.'
      }
      return `–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ —Ä–µ–∑—é–º–µ: ${error.message}. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.`
    }
  }

  const handleNext = async () => {
    console.log('üî• –ö–ù–û–ü–ö–ê –ü–†–û–î–û–õ–ñ–ò–¢–¨ –ù–ê–ñ–ê–¢–ê! –¢–µ–∫—É—â–∏–π —à–∞–≥:', currentStep)
    console.log('üî• selectedProfession:', selectedProfession)
    console.log('üî• canProceed():', canProceed())
    
    if (currentStep === "instruction") {
      console.log('üî• –ü–ï–†–ï–•–û–î–ò–ú –ö –ó–ê–ì–†–£–ó–ö–ï!')
      setCurrentStep("upload")
    } else if (currentStep === "upload") {
      console.log('üî• –ü–ï–†–ï–•–û–î–ò–ú –ö –û–ë–†–ê–ë–û–¢–ö–ï!')
      setCurrentStep("processing")
      setIsAnalyzing(true)
      
      if (uploadedFile) {
        try {
          console.log('üî• –ù–∞—á–∏–Ω–∞–µ–º –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –∏–∑ —Ñ–∞–π–ª–∞...')
          const resumeText = await extractTextFromFile(uploadedFile)
          console.log('üî• –¢–µ–∫—Å—Ç –∏–∑–≤–ª–µ—á–µ–Ω, –Ω–∞—á–∏–Ω–∞–µ–º –∞–Ω–∞–ª–∏–∑...')
          
          const profession = selectedProfession
          const result = await analyzeResumeWithAI(resumeText, profession, jobUrl)
          console.log('üî• –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω, —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç...')
          
          const formattedResult = formatAIResponse(result)
          setAnalysisResult(formattedResult)
          
          console.log('üî• –†–µ–∑—É–ª—å—Ç–∞—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –∑–∞–≤–µ—Ä—à–∞–µ–º –∞–Ω–∞–ª–∏–∑...')
          
          // –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –ø–æ–∫–∞–∑–∞ —ç–∫—Ä–∞–Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ (3 —Å–µ–∫—É–Ω–¥—ã –¥–ª—è —á—Ç–µ–Ω–∏—è —Ñ–∞–∫—Ç–æ–≤)
          setTimeout(() => {
            setIsAnalyzing(false)
            setCurrentStep("results")
            console.log('üî• –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º –∑–∞–≤–µ—Ä—à–µ–Ω!')
          }, 3000)
          
        } catch (error) {
          console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ:', error)
          setAnalysisResult(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ä–µ–∑—é–º–µ: ${error.message || error}`)
          
          // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ —Ç–æ–∂–µ –∑–∞–≤–µ—Ä—à–∞–µ–º –∞–Ω–∞–ª–∏–∑
          setTimeout(() => {
            setIsAnalyzing(false)
            setCurrentStep("results")
          }, 2000)
        }
      } else {
        console.error('–§–∞–π–ª –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω!')
        setAnalysisResult('–§–∞–π–ª —Ä–µ–∑—é–º–µ –Ω–µ –±—ã–ª –∑–∞–≥—Ä—É–∂–µ–Ω.')
        setTimeout(() => {
          setIsAnalyzing(false)
          setCurrentStep("results")
        }, 2000)
      }
    }
  }

  const canProceed = () => {
    const result = (() => {
      if (currentStep === "instruction") {
        return (localSelectedProfession && localSelectedProfession.trim() !== "") || 
               (customProfession && customProfession.trim() !== "")
      }
      if (currentStep === "upload") {
        return uploadedFile !== null
      }
      return false
    })()
    
    console.log('üîç canProceed –ø—Ä–æ–≤–µ—Ä–∫–∞:', {
      currentStep,
      selectedProfession: localSelectedProfession || customProfession,
      uploadedFile: uploadedFile?.name,
      result
    })
    
    return result
  }

  console.log('üìã –¢–µ–∫—É—â–∏–π —à–∞–≥:', currentStep)
  
  if (currentStep === "instruction") {
    console.log('üìù –†–ï–ù–î–ï–†–ò–ú –≠–ö–†–ê–ù –ò–ù–°–¢–†–£–ö–¶–ò–ô')
    return (
      <div className="min-h-screen bg-gradient-to-br from-blue-500 via-purple-600 to-purple-700 text-white p-4">
        <div className="max-w-2xl mx-auto">
          {/* Header */}
          <div className="flex items-center gap-3 mb-8 pt-4">
            <Button
              variant="ghost"
              size="icon"
              onClick={onBack}
              className="text-white hover:bg-white/20"
            >
              <ArrowLeft className="h-6 w-6" />
            </Button>
            <h1 className="text-xl font-semibold">–£–ª—É—á—à–∏—Ç—å —Ä–µ–∑—é–º–µ</h1>
          </div>

          {/* How it works card */}
          <Card className="bg-gradient-to-r from-blue-500 to-purple-600 border-0 mb-6 shadow-lg">
            <CardContent className="p-6">
              <div className="flex items-start gap-3 mb-4">
                <div className="bg-white/20 rounded-full p-2">
                  <Sparkles className="h-5 w-5 text-white" />
                </div>
                <div>
                  <h3 className="font-semibold text-white mb-2">–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç</h3>
                  <p className="text-white/90 text-sm leading-relaxed">
                    –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Å–≤–æ–µ —Ä–µ–∑—é–º–µ, –∏ –º—ã —Ä–∞–∑–±–µ—Ä–µ–º –µ–≥–æ –ø–æ –ª—É—á—à–∏–º –º–µ—Ç–æ–¥–∏–∫–∞–º. –í—ã –ø–æ–ª—É—á–∏—Ç–µ
                    –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è.
                  </p>
                </div>
              </div>
            </CardContent>
          </Card>

          {/* Profession selection */}
          <div className="mb-6">
            <div className="flex items-center gap-2 mb-4">
              <Target className="h-5 w-5 text-white" />
              <h3 className="font-semibold text-white">–ü—Ä–æ—Ñ–µ—Å—Å–∏—è</h3>
            </div>

            <div className="space-y-3">
              {/* Simple text input */}
              <Input
                placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä: Frontend —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫)"
                value={customProfession}
                onChange={(e) => handleCustomProfessionChange(e.target.value)}
                className="bg-white/20 border-white/40 text-white placeholder:text-white/70 backdrop-blur-sm"
                onKeyPress={(e) => {
                  if (e.key === 'Enter') {
                    handleCustomProfessionSubmit()
                  }
                }}
              />
              
              {/* Filtered suggestions */}
              {filteredProfessions.length > 0 && (
                <div className="bg-white/20 border border-white/40 rounded-lg backdrop-blur-sm">
                  {filteredProfessions.map((profession) => (
                    <button
                      key={profession}
                      onClick={() => handleProfessionSelect(profession)}
                      className="w-full text-left px-4 py-2 text-white hover:bg-white/20 first:rounded-t-lg last:rounded-b-lg"
                    >
                      {profession}
                    </button>
                  ))}
                </div>
              )}
              
              {/* Popular professions */}
               <div className="text-white/70 text-sm">
                 <p className="mb-2">–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏:</p>
                 <div className="flex flex-wrap gap-2">
                   {allProfessions.slice(0, 6).map((profession) => (
                     <button
                       key={profession}
                       onClick={() => handleProfessionSelect(profession)}
                       className="px-3 py-1 bg-white/10 hover:bg-white/20 rounded-full text-xs transition-colors"
                     >
                       {profession}
                     </button>
                   ))}
                 </div>
               </div>
               
               {/* Selected profession display */}
               {(localSelectedProfession || customProfession) && (
                 <div className="bg-white/20 border border-white/40 rounded-lg p-3 backdrop-blur-sm">
                   <div className="flex items-center gap-2">
                     <div className="w-2 h-2 bg-green-400 rounded-full"></div>
                     <p className="text-white font-medium">–í—ã–±—Ä–∞–Ω–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏—è: {localSelectedProfession || customProfession}</p>
                   </div>
                 </div>
               )}
            </div>
          </div>

          {/* Job URL input */}
          <div className="mb-8">
            <div className="flex items-center gap-2 mb-3">
              <ExternalLink className="h-5 w-5 text-white" />
              <h3 className="font-semibold text-white">–°—Å—ã–ª–∫–∞ –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏—é</h3>
              <Badge variant="secondary" className="bg-white/20 text-white text-xs pointer-events-none">
                –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ
              </Badge>
            </div>
            <Input
              placeholder="–ò–ª–∏ –≤—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏—é"
              value={jobUrl}
              onChange={(e) => setJobUrl(e.target.value)}
              className="bg-white/20 border-white/40 text-white placeholder:text-white/70 backdrop-blur-sm"
            />
            <p className="text-white/60 text-xs mt-2">
              –ú—ã –∞–¥–∞–ø—Ç–∏—Ä—É–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ–¥ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –≤–∞–∫–∞–Ω—Å–∏—é
            </p>
          </div>

          {/* Continue button */}
          <Button
            onClick={handleNext}
            disabled={!canProceed()}
            className="w-full bg-gradient-to-r from-blue-500 to-purple-600 text-white hover:from-blue-600 hover:to-purple-700 font-semibold py-3 shadow-lg border-0"
          >
            –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å
          </Button>
        </div>
      </div>
    )
  }

  if (currentStep === "upload") {
    return (
      <div className="min-h-screen bg-gradient-to-br from-blue-500 via-purple-600 to-purple-700 text-white p-4">
        <div className="max-w-2xl mx-auto">
          {/* Header */}
          <div className="flex items-center gap-3 mb-8 pt-4">
            <Button
              variant="ghost"
              size="icon"
              onClick={() => setCurrentStep("instruction")}
              className="text-white hover:bg-white/20"
            >
              <ArrowLeft className="h-6 w-6" />
            </Button>
            <h1 className="text-xl font-semibold">–ó–∞–≥—Ä—É–∑–∏—Ç—å —Ä–µ–∑—é–º–µ</h1>
          </div>

          {/* Upload area */}
          <div className="mb-8">
            <input
                id="file-input"
                type="file"
                accept=".pdf,.doc,.docx,.txt"
                onChange={handleFileUpload}
                className="hidden"
              />
            <div 
              className="border-2 border-dashed border-white/40 rounded-lg p-8 text-center cursor-pointer hover:border-white/60 transition-colors backdrop-blur-sm bg-white/5"
              onDragOver={handleDragOver}
              onDrop={handleDrop}
              onClick={triggerFileInput}
            >
              <div className="bg-blue-500/20 rounded-full p-4 w-16 h-16 mx-auto mb-4 flex items-center justify-center">
                <Upload className="h-8 w-8 text-white" />
              </div>
              <h3 className="font-semibold text-white mb-2">–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ä–µ–∑—é–º–µ</h3>
              <p className="text-white/70 text-sm mb-4">
                –ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ —Ñ–∞–π–ª —Å—é–¥–∞ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ —Å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
              </p>
              <p className="text-white/60 text-xs mb-4">
                  –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ñ–æ—Ä–º–∞—Ç—ã: PDF, DOC, DOCX, TXT
                </p>
              <Button 
                className="bg-gradient-to-r from-blue-500 to-purple-600 text-white hover:from-blue-600 hover:to-purple-700 border-0 shadow-lg"
                onClick={(e) => {
                  e.stopPropagation()
                  triggerFileInput()
                }}
              >
                –í—ã–±—Ä–∞—Ç—å —Ñ–∞–π–ª
              </Button>
            </div>

            {uploadedFile && (
              <div className="mt-4 p-4 bg-white/20 rounded-lg backdrop-blur-sm border border-white/30">
                <div className="flex items-center gap-3">
                  <div className="bg-green-500/20 rounded-full p-2">
                    <CheckCircle className="h-5 w-5 text-green-400" />
                  </div>
                  <div className="flex-1">
                    <p className="font-medium text-white">{uploadedFile.name}</p>
                    <p className="text-white/70 text-sm">
                      {(uploadedFile.size / 1024 / 1024).toFixed(2)} MB
                    </p>
                  </div>
                  <FileText className="h-5 w-5 text-white/60" />
                </div>
              </div>
            )}
          </div>

          {/* Continue button */}
          <Button
            onClick={handleNext}
            disabled={!canProceed()}
            className="w-full bg-gradient-to-r from-blue-500 to-purple-600 text-white hover:from-blue-600 hover:to-purple-700 font-semibold py-3 shadow-lg border-0"
          >
            –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∑—é–º–µ
          </Button>
        </div>
      </div>
    )
  }

  if (currentStep === "processing") {
    return (
      <div className="min-h-screen bg-gradient-to-br from-blue-500 via-purple-600 to-purple-700 text-white p-4">
        <div className="max-w-md mx-auto">
          {/* Header */}
          <div className="flex items-center gap-3 mb-8 pt-4">
            <div className="w-10 h-10" /> {/* Spacer */}
            <h1 className="text-xl font-semibold">–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–µ–∑—é–º–µ</h1>
          </div>

          {/* Processing animation */}
          <div className="text-center mb-8">
            <div className="relative w-32 h-32 mx-auto mb-6">
              <div className="absolute inset-0 border-4 border-white/20 rounded-full"></div>
              <div className="absolute inset-0 border-4 border-t-4 border-white border-t-transparent rounded-full animate-spin"></div>
              <div className="absolute inset-4 bg-white/10 rounded-full flex items-center justify-center backdrop-blur-sm">
                <FileText className="h-8 w-8 text-white" />
              </div>
              <div className="absolute -top-2 -right-2 bg-blue-500 text-white text-xs font-bold rounded-lg px-2 py-1 flex items-center justify-center">
                –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ
              </div>
            </div>
            <h2 className="text-xl font-semibold mb-2">–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–µ–∑—é–º–µ</h2>
            <p className="text-white/80">–û–±—ã—á–Ω–æ —ç—Ç–æ –∑–∞–Ω–∏–º–∞–µ—Ç –¥–æ 1-2 –º–∏–Ω—É—Ç...</p>
          </div>

          {/* Interesting facts */}
          <Card className="bg-white/20 backdrop-blur-sm border-white/30 shadow-lg">
            <CardContent className="p-6">
              <div className="text-center">
                <div className="bg-white/20 rounded-full w-12 h-12 flex items-center justify-center mx-auto mb-4">
                  <div className="text-2xl">{interestingFacts[currentFactIndex].icon}</div>
                </div>
                <h3 className="font-semibold text-white mb-2">
                  {interestingFacts[currentFactIndex].title}
                </h3>
                <p className="text-white/90 text-sm leading-relaxed">
                  {interestingFacts[currentFactIndex].text}
                </p>
              </div>
            </CardContent>
          </Card>
        </div>
      </div>
    )
  }

  if (currentStep === "results") {
    return (
      <div className="min-h-screen bg-gradient-to-br from-blue-500 via-purple-600 to-purple-700 text-white p-4">
        <div className="max-w-md mx-auto">
          {/* Header */}
          <div className="flex items-center gap-3 mb-6 pt-4">
            <Button
              variant="ghost"
              size="icon"
              onClick={onBack}
              className="text-white hover:bg-white/20"
            >
              <ArrowLeft className="h-6 w-6" />
            </Button>
            <h1 className="text-xl font-semibold">–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞</h1>
          </div>

          {/* Analysis Result */}
          {analysisResult && (
            <Card className="bg-white/20 backdrop-blur-sm border-white/30 shadow-lg mb-6 w-full max-w-full overflow-hidden">
              <CardContent className="p-6">
                <div className="flex items-center gap-2 mb-4">
                  <CheckCircle className="h-6 w-6 text-green-400" />
                  <span className="text-xl font-semibold text-white">–ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—é–º–µ</span>
                </div>
                <div className="text-white/90 text-sm leading-relaxed whitespace-pre-wrap break-words overflow-auto max-w-full">
                  {analysisResult}
                </div>
              </CardContent>
            </Card>
          )}



          {/* Additional Recommendations */}
          <div className="mb-6">
            <h3 className="font-semibold text-white mb-4 flex items-center gap-2">
              <Sparkles className="h-5 w-5" />
              –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
            </h3>
            <div className="grid grid-cols-1 gap-4">
              {/* Online Consultation */}
              <Card className="bg-white/10 backdrop-blur-lg border-white/20 shadow-xl hover:shadow-2xl hover:scale-105 transition-all duration-300 cursor-pointer">
                <CardContent className="p-6">
                  <div className="text-center">
                    <div className="w-16 h-16 bg-gradient-to-br from-blue-400 to-blue-600 rounded-full flex items-center justify-center mx-auto mb-4 shadow-lg">
                      <svg className="w-8 h-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z" />
                      </svg>
                    </div>
                    <h4 className="font-bold text-white text-lg mb-2">–û–Ω–ª–∞–π–Ω –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è</h4>
                    <p className="text-white/90 text-sm mb-4 leading-relaxed">–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è —Å HR-—ç–∫—Å–ø–µ—Ä—Ç–æ–º</p>
                    <Button className="w-full bg-gradient-to-r from-blue-500 to-blue-600 text-white border-0 hover:from-blue-600 hover:to-blue-700 transition-all duration-300 font-semibold py-2.5 shadow-lg">
                      –ó–∞–∫–∞–∑–∞—Ç—å
                    </Button>
                  </div>
                </CardContent>
              </Card>

              {/* Knowledge Base */}
              <Card className="bg-white/10 backdrop-blur-lg border-white/20 shadow-xl hover:shadow-2xl hover:scale-105 transition-all duration-300 cursor-pointer">
                <CardContent className="p-6">
                  <div className="text-center">
                    <div className="w-16 h-16 bg-gradient-to-br from-purple-400 to-purple-600 rounded-full flex items-center justify-center mx-auto mb-4 shadow-lg">
                      <svg className="w-8 h-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253" />
                      </svg>
                    </div>
                    <h4 className="font-bold text-white text-lg mb-2">–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π</h4>
                    <p className="text-white/90 text-sm mb-4 leading-relaxed">–î–æ—Å—Ç—É–ø –∫ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–º –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º</p>
                    <Button className="w-full bg-gradient-to-r from-purple-500 to-purple-600 text-white border-0 hover:from-purple-600 hover:to-purple-700 transition-all duration-300 font-semibold py-2.5 shadow-lg">
                      –ü–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø
                    </Button>
                  </div>
                </CardContent>
              </Card>

              {/* LinkedIn Profile */}
              <Card className="bg-white/10 backdrop-blur-lg border-white/20 shadow-xl hover:shadow-2xl hover:scale-105 transition-all duration-300 cursor-pointer">
                <CardContent className="p-6">
                  <div className="text-center">
                    <div className="w-16 h-16 bg-gradient-to-br from-green-400 to-green-600 rounded-full flex items-center justify-center mx-auto mb-4 shadow-lg">
                      <svg className="w-8 h-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                      </svg>
                    </div>
                    <h4 className="font-bold text-white text-lg mb-2">LinkedIn –ø—Ä–æ—Ñ–∏–ª—å</h4>
                    <p className="text-white/90 text-sm mb-4 leading-relaxed">–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ñ–∏–ª—è –≤ LinkedIn</p>
                    <Button className="w-full bg-gradient-to-r from-green-500 to-green-600 text-white border-0 hover:from-green-600 hover:to-green-700 transition-all duration-300 font-semibold py-2.5 shadow-lg">
                      –ü–æ–ª—É—á–∏—Ç—å –ø–æ–º–æ—â—å
                    </Button>
                  </div>
                </CardContent>
              </Card>
            </div>
          </div>

          {/* Job matches */}
          <div className="mb-6">
            <h3 className="font-semibold text-white mb-4 flex items-center gap-2">
              <Briefcase className="h-5 w-5" />
              –ü–æ–¥—Ö–æ–¥—è—â–∏–µ –≤–∞–∫–∞–Ω—Å–∏–∏
            </h3>
            <div className="space-y-3">
              {(apiJobs.length > 0 ? apiJobs : getJobsForProfession(localSelectedProfession || customProfession, selectedRole, selectedGoal)).map((job) => (
                <Card key={job.id} className="bg-white/20 backdrop-blur-sm border-white/30 shadow-lg hover:bg-white/25 transition-colors cursor-pointer">
                  <CardContent className="p-4">
                    <div className="flex justify-between items-start mb-2">
                      <div>
                        <h4 className="font-medium text-white">{job.title}</h4>
                        <p className="text-white/80 text-sm">{job.company}</p>
                      </div>
                      <Badge className="bg-green-500/20 text-green-400 border-green-400/30">
                        {job.type}
                      </Badge>
                    </div>
                    <p className="text-white/70 text-sm mb-2">{job.description}</p>
                    <div className="flex items-center gap-4 text-white/70 text-sm">
                      <div className="flex items-center gap-1">
                        <MapPin className="h-3 w-3" />
                        {job.location}
                      </div>
                      <div className="flex items-center gap-1">
                        <DollarSign className="h-3 w-3" />
                        {job.salary}
                      </div>
                    </div>
                  </CardContent>
                </Card>
              ))}
            </div>
          </div>

          {/* Action buttons */}
          <div className="space-y-3">
            <Button className="w-full bg-gradient-to-r from-blue-500 to-purple-600 text-white hover:from-blue-600 hover:to-purple-700 font-semibold py-3 shadow-lg border-0">
              –°–∫–∞—á–∞—Ç—å —É–ª—É—á—à–µ–Ω–Ω–æ–µ —Ä–µ–∑—é–º–µ
            </Button>
            <Button
              variant="outline"
              className="w-full border-white/40 text-gray-800 hover:bg-white/20 hover:text-white backdrop-blur-sm"
              onClick={() => setCurrentStep("instruction")}
            >
              –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –¥—Ä—É–≥–æ–µ —Ä–µ–∑—é–º–µ
            </Button>
          </div>
        </div>
      </div>
    )
  }

  // Fallback to instruction step if currentStep is invalid
  console.log('‚ö†Ô∏è –ù–ï–ò–ó–í–ï–°–¢–ù–´–ô –®–ê–ì, –í–û–ó–í–†–ê–©–ê–ï–ú–°–Ø –ö –ò–ù–°–¢–†–£–ö–¶–ò–Ø–ú')
  setCurrentStep("instruction")
  return null
}